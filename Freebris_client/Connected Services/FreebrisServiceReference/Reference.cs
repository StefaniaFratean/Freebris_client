//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Freebris_client.FreebrisServiceReference {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="FreebrisServer", ConfigurationName="FreebrisServiceReference.FreebrisWebServiceSoap")]
    public interface FreebrisWebServiceSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="FreebrisServer/HelloWorld", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string HelloWorld();
        
        [System.ServiceModel.OperationContractAttribute(Action="FreebrisServer/HelloWorld", ReplyAction="*")]
        System.Threading.Tasks.Task<string> HelloWorldAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="FreebrisServer/GetAllUsers", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable GetAllUsers();
        
        [System.ServiceModel.OperationContractAttribute(Action="FreebrisServer/GetAllUsers", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetAllUsersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="FreebrisServer/CheckPassword", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool CheckPassword(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="FreebrisServer/CheckPassword", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> CheckPasswordAsync(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="FreebrisServer/GetPath", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetPath(int bookId);
        
        [System.ServiceModel.OperationContractAttribute(Action="FreebrisServer/GetPath", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetPathAsync(int bookId);
        
        [System.ServiceModel.OperationContractAttribute(Action="FreebrisServer/IsAdmin", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool IsAdmin(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="FreebrisServer/IsAdmin", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> IsAdminAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="FreebrisServer/ChangePassword", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool ChangePassword(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="FreebrisServer/ChangePassword", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> ChangePasswordAsync(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="FreebrisServer/AddPoints", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void AddPoints(int id, int points);
        
        [System.ServiceModel.OperationContractAttribute(Action="FreebrisServer/AddPoints", ReplyAction="*")]
        System.Threading.Tasks.Task AddPointsAsync(int id, int points);
        
        [System.ServiceModel.OperationContractAttribute(Action="FreebrisServer/SendEmail", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void SendEmail(string email, string subject, string text);
        
        [System.ServiceModel.OperationContractAttribute(Action="FreebrisServer/SendEmail", ReplyAction="*")]
        System.Threading.Tasks.Task SendEmailAsync(string email, string subject, string text);
        
        [System.ServiceModel.OperationContractAttribute(Action="FreebrisServer/CreateDownload", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void CreateDownload(int idUser, int idBook);
        
        [System.ServiceModel.OperationContractAttribute(Action="FreebrisServer/CreateDownload", ReplyAction="*")]
        System.Threading.Tasks.Task CreateDownloadAsync(int idUser, int idBook);
        
        [System.ServiceModel.OperationContractAttribute(Action="FreebrisServer/CreateUser", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool CreateUser(string username, string password, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="FreebrisServer/CreateUser", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> CreateUserAsync(string username, string password, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="FreebrisServer/GetId", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int GetId(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="FreebrisServer/GetId", ReplyAction="*")]
        System.Threading.Tasks.Task<int> GetIdAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="FreebrisServer/GetPoints", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int GetPoints(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="FreebrisServer/GetPoints", ReplyAction="*")]
        System.Threading.Tasks.Task<int> GetPointsAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="FreebrisServer/DeleteUser", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool DeleteUser(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="FreebrisServer/DeleteUser", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> DeleteUserAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="FreebrisServer/DeleteBook", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool DeleteBook(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="FreebrisServer/DeleteBook", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> DeleteBookAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="FreebrisServer/GetAllBooks", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable GetAllBooks();
        
        [System.ServiceModel.OperationContractAttribute(Action="FreebrisServer/GetAllBooks", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetAllBooksAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="FreebrisServer/CreateBook", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void CreateBook(string name, int size, int idAuthor, int idIconBook, string path);
        
        [System.ServiceModel.OperationContractAttribute(Action="FreebrisServer/CreateBook", ReplyAction="*")]
        System.Threading.Tasks.Task CreateBookAsync(string name, int size, int idAuthor, int idIconBook, string path);
        
        [System.ServiceModel.OperationContractAttribute(Action="FreebrisServer/ChangeEmail", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void ChangeEmail(string username, string newEmail);
        
        [System.ServiceModel.OperationContractAttribute(Action="FreebrisServer/ChangeEmail", ReplyAction="*")]
        System.Threading.Tasks.Task ChangeEmailAsync(string username, string newEmail);
        
        [System.ServiceModel.OperationContractAttribute(Action="FreebrisServer/GetEmail", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetEmail(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="FreebrisServer/GetEmail", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetEmailAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="FreebrisServer/GetBooksByTitle", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable GetBooksByTitle(string bookName);
        
        [System.ServiceModel.OperationContractAttribute(Action="FreebrisServer/GetBooksByTitle", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetBooksByTitleAsync(string bookName);
        
        [System.ServiceModel.OperationContractAttribute(Action="FreebrisServer/GetBooksByAuthor", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable GetBooksByAuthor(string authorName);
        
        [System.ServiceModel.OperationContractAttribute(Action="FreebrisServer/GetBooksByAuthor", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetBooksByAuthorAsync(string authorName);
        
        [System.ServiceModel.OperationContractAttribute(Action="FreebrisServer/GetBookId", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int GetBookId(string bookTitle);
        
        [System.ServiceModel.OperationContractAttribute(Action="FreebrisServer/GetBookId", ReplyAction="*")]
        System.Threading.Tasks.Task<int> GetBookIdAsync(string bookTitle);
        
        [System.ServiceModel.OperationContractAttribute(Action="FreebrisServer/GetIcon", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetIcon(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="FreebrisServer/GetIcon", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetIconAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="FreebrisServer/GetIconBook", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetIconBook(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="FreebrisServer/GetIconBook", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetIconBookAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="FreebrisServer/GetIconForUser", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int GetIconForUser(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="FreebrisServer/GetIconForUser", ReplyAction="*")]
        System.Threading.Tasks.Task<int> GetIconForUserAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="FreebrisServer/GetUsername", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetUsername(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="FreebrisServer/GetUsername", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetUsernameAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="FreebrisServer/GetDownloadedBooksByUser", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable GetDownloadedBooksByUser(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="FreebrisServer/GetDownloadedBooksByUser", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetDownloadedBooksByUserAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="FreebrisServer/SetIcon", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void SetIcon(int id, int idIcon);
        
        [System.ServiceModel.OperationContractAttribute(Action="FreebrisServer/SetIcon", ReplyAction="*")]
        System.Threading.Tasks.Task SetIconAsync(int id, int idIcon);
        
        [System.ServiceModel.OperationContractAttribute(Action="FreebrisServer/SetBookIcon", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void SetBookIcon(int id, int idIcon);
        
        [System.ServiceModel.OperationContractAttribute(Action="FreebrisServer/SetBookIcon", ReplyAction="*")]
        System.Threading.Tasks.Task SetBookIconAsync(int id, int idIcon);
        
        [System.ServiceModel.OperationContractAttribute(Action="FreebrisServer/GetAllIcons", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable GetAllIcons();
        
        [System.ServiceModel.OperationContractAttribute(Action="FreebrisServer/GetAllIcons", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetAllIconsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="FreebrisServer/GetAllBookIcons", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable GetAllBookIcons();
        
        [System.ServiceModel.OperationContractAttribute(Action="FreebrisServer/GetAllBookIcons", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetAllBookIconsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="FreebrisServer/CreateReview", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool CreateReview(int bookId, int userId, string text);
        
        [System.ServiceModel.OperationContractAttribute(Action="FreebrisServer/CreateReview", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> CreateReviewAsync(int bookId, int userId, string text);
        
        [System.ServiceModel.OperationContractAttribute(Action="FreebrisServer/DeleteReview", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool DeleteReview(int bookId, int userId, string text);
        
        [System.ServiceModel.OperationContractAttribute(Action="FreebrisServer/DeleteReview", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> DeleteReviewAsync(int bookId, int userId, string text);
        
        [System.ServiceModel.OperationContractAttribute(Action="FreebrisServer/DeleteReviewById", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool DeleteReviewById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="FreebrisServer/DeleteReviewById", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> DeleteReviewByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="FreebrisServer/GetAllReviewForBook", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable GetAllReviewForBook(string bookTitle);
        
        [System.ServiceModel.OperationContractAttribute(Action="FreebrisServer/GetAllReviewForBook", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetAllReviewForBookAsync(string bookTitle);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface FreebrisWebServiceSoapChannel : Freebris_client.FreebrisServiceReference.FreebrisWebServiceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FreebrisWebServiceSoapClient : System.ServiceModel.ClientBase<Freebris_client.FreebrisServiceReference.FreebrisWebServiceSoap>, Freebris_client.FreebrisServiceReference.FreebrisWebServiceSoap {
        
        public FreebrisWebServiceSoapClient() {
        }
        
        public FreebrisWebServiceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public FreebrisWebServiceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FreebrisWebServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FreebrisWebServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string HelloWorld() {
            return base.Channel.HelloWorld();
        }
        
        public System.Threading.Tasks.Task<string> HelloWorldAsync() {
            return base.Channel.HelloWorldAsync();
        }
        
        public System.Data.DataTable GetAllUsers() {
            return base.Channel.GetAllUsers();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetAllUsersAsync() {
            return base.Channel.GetAllUsersAsync();
        }
        
        public bool CheckPassword(string username, string password) {
            return base.Channel.CheckPassword(username, password);
        }
        
        public System.Threading.Tasks.Task<bool> CheckPasswordAsync(string username, string password) {
            return base.Channel.CheckPasswordAsync(username, password);
        }
        
        public string GetPath(int bookId) {
            return base.Channel.GetPath(bookId);
        }
        
        public System.Threading.Tasks.Task<string> GetPathAsync(int bookId) {
            return base.Channel.GetPathAsync(bookId);
        }
        
        public bool IsAdmin(string username) {
            return base.Channel.IsAdmin(username);
        }
        
        public System.Threading.Tasks.Task<bool> IsAdminAsync(string username) {
            return base.Channel.IsAdminAsync(username);
        }
        
        public bool ChangePassword(string username, string password) {
            return base.Channel.ChangePassword(username, password);
        }
        
        public System.Threading.Tasks.Task<bool> ChangePasswordAsync(string username, string password) {
            return base.Channel.ChangePasswordAsync(username, password);
        }
        
        public void AddPoints(int id, int points) {
            base.Channel.AddPoints(id, points);
        }
        
        public System.Threading.Tasks.Task AddPointsAsync(int id, int points) {
            return base.Channel.AddPointsAsync(id, points);
        }
        
        public void SendEmail(string email, string subject, string text) {
            base.Channel.SendEmail(email, subject, text);
        }
        
        public System.Threading.Tasks.Task SendEmailAsync(string email, string subject, string text) {
            return base.Channel.SendEmailAsync(email, subject, text);
        }
        
        public void CreateDownload(int idUser, int idBook) {
            base.Channel.CreateDownload(idUser, idBook);
        }
        
        public System.Threading.Tasks.Task CreateDownloadAsync(int idUser, int idBook) {
            return base.Channel.CreateDownloadAsync(idUser, idBook);
        }
        
        public bool CreateUser(string username, string password, string email) {
            return base.Channel.CreateUser(username, password, email);
        }
        
        public System.Threading.Tasks.Task<bool> CreateUserAsync(string username, string password, string email) {
            return base.Channel.CreateUserAsync(username, password, email);
        }
        
        public int GetId(string username) {
            return base.Channel.GetId(username);
        }
        
        public System.Threading.Tasks.Task<int> GetIdAsync(string username) {
            return base.Channel.GetIdAsync(username);
        }
        
        public int GetPoints(string username) {
            return base.Channel.GetPoints(username);
        }
        
        public System.Threading.Tasks.Task<int> GetPointsAsync(string username) {
            return base.Channel.GetPointsAsync(username);
        }
        
        public bool DeleteUser(int id) {
            return base.Channel.DeleteUser(id);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteUserAsync(int id) {
            return base.Channel.DeleteUserAsync(id);
        }
        
        public bool DeleteBook(int id) {
            return base.Channel.DeleteBook(id);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteBookAsync(int id) {
            return base.Channel.DeleteBookAsync(id);
        }
        
        public System.Data.DataTable GetAllBooks() {
            return base.Channel.GetAllBooks();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetAllBooksAsync() {
            return base.Channel.GetAllBooksAsync();
        }
        
        public void CreateBook(string name, int size, int idAuthor, int idIconBook, string path) {
            base.Channel.CreateBook(name, size, idAuthor, idIconBook, path);
        }
        
        public System.Threading.Tasks.Task CreateBookAsync(string name, int size, int idAuthor, int idIconBook, string path) {
            return base.Channel.CreateBookAsync(name, size, idAuthor, idIconBook, path);
        }
        
        public void ChangeEmail(string username, string newEmail) {
            base.Channel.ChangeEmail(username, newEmail);
        }
        
        public System.Threading.Tasks.Task ChangeEmailAsync(string username, string newEmail) {
            return base.Channel.ChangeEmailAsync(username, newEmail);
        }
        
        public string GetEmail(string username) {
            return base.Channel.GetEmail(username);
        }
        
        public System.Threading.Tasks.Task<string> GetEmailAsync(string username) {
            return base.Channel.GetEmailAsync(username);
        }
        
        public System.Data.DataTable GetBooksByTitle(string bookName) {
            return base.Channel.GetBooksByTitle(bookName);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetBooksByTitleAsync(string bookName) {
            return base.Channel.GetBooksByTitleAsync(bookName);
        }
        
        public System.Data.DataTable GetBooksByAuthor(string authorName) {
            return base.Channel.GetBooksByAuthor(authorName);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetBooksByAuthorAsync(string authorName) {
            return base.Channel.GetBooksByAuthorAsync(authorName);
        }
        
        public int GetBookId(string bookTitle) {
            return base.Channel.GetBookId(bookTitle);
        }
        
        public System.Threading.Tasks.Task<int> GetBookIdAsync(string bookTitle) {
            return base.Channel.GetBookIdAsync(bookTitle);
        }
        
        public string GetIcon(int id) {
            return base.Channel.GetIcon(id);
        }
        
        public System.Threading.Tasks.Task<string> GetIconAsync(int id) {
            return base.Channel.GetIconAsync(id);
        }
        
        public string GetIconBook(int id) {
            return base.Channel.GetIconBook(id);
        }
        
        public System.Threading.Tasks.Task<string> GetIconBookAsync(int id) {
            return base.Channel.GetIconBookAsync(id);
        }
        
        public int GetIconForUser(string username) {
            return base.Channel.GetIconForUser(username);
        }
        
        public System.Threading.Tasks.Task<int> GetIconForUserAsync(string username) {
            return base.Channel.GetIconForUserAsync(username);
        }
        
        public string GetUsername(int id) {
            return base.Channel.GetUsername(id);
        }
        
        public System.Threading.Tasks.Task<string> GetUsernameAsync(int id) {
            return base.Channel.GetUsernameAsync(id);
        }
        
        public System.Data.DataTable GetDownloadedBooksByUser(int id) {
            return base.Channel.GetDownloadedBooksByUser(id);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetDownloadedBooksByUserAsync(int id) {
            return base.Channel.GetDownloadedBooksByUserAsync(id);
        }
        
        public void SetIcon(int id, int idIcon) {
            base.Channel.SetIcon(id, idIcon);
        }
        
        public System.Threading.Tasks.Task SetIconAsync(int id, int idIcon) {
            return base.Channel.SetIconAsync(id, idIcon);
        }
        
        public void SetBookIcon(int id, int idIcon) {
            base.Channel.SetBookIcon(id, idIcon);
        }
        
        public System.Threading.Tasks.Task SetBookIconAsync(int id, int idIcon) {
            return base.Channel.SetBookIconAsync(id, idIcon);
        }
        
        public System.Data.DataTable GetAllIcons() {
            return base.Channel.GetAllIcons();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetAllIconsAsync() {
            return base.Channel.GetAllIconsAsync();
        }
        
        public System.Data.DataTable GetAllBookIcons() {
            return base.Channel.GetAllBookIcons();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetAllBookIconsAsync() {
            return base.Channel.GetAllBookIconsAsync();
        }
        
        public bool CreateReview(int bookId, int userId, string text) {
            return base.Channel.CreateReview(bookId, userId, text);
        }
        
        public System.Threading.Tasks.Task<bool> CreateReviewAsync(int bookId, int userId, string text) {
            return base.Channel.CreateReviewAsync(bookId, userId, text);
        }
        
        public bool DeleteReview(int bookId, int userId, string text) {
            return base.Channel.DeleteReview(bookId, userId, text);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteReviewAsync(int bookId, int userId, string text) {
            return base.Channel.DeleteReviewAsync(bookId, userId, text);
        }
        
        public bool DeleteReviewById(int id) {
            return base.Channel.DeleteReviewById(id);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteReviewByIdAsync(int id) {
            return base.Channel.DeleteReviewByIdAsync(id);
        }
        
        public System.Data.DataTable GetAllReviewForBook(string bookTitle) {
            return base.Channel.GetAllReviewForBook(bookTitle);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetAllReviewForBookAsync(string bookTitle) {
            return base.Channel.GetAllReviewForBookAsync(bookTitle);
        }
    }
}
